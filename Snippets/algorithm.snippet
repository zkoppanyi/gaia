<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>algorithm</Title>
      <Shortcut>algorithm</Shortcut>
      <Description>Code snippet for creating algorithm pattern</Description>
      <Author>Zoltan Koppanyi</Author>
    </Header>
    <Snippet>
      <Declarations>

        <Literal>
          <ID>AlgorithmName</ID>
          <ToolTip>Name of the algorithm class</ToolTip>
          <Default>MyAlgorithm</Default>
        </Literal>

        <Literal>
          <ID>DataStreamClass</ID>
          <ToolTip>The class of the datastream that the algorithm work on</ToolTip>
          <Default>DataStream</Default>
        </Literal>

       <Literal>
          <ID>CustomParameter</ID>
          <ToolTip>Specify a parameter</ToolTip>
          <Default>MyCustomParamter</Default>
        </Literal>

        <Literal>
          <ID>CustomParameterType</ID>
          <ToolTip>Specify the type of the parameter</ToolTip>
          <Default>double</Default>
        </Literal>

      </Declarations>
      
      <Code Language="csharp">
        <![CDATA[
    public class $AlgorithmName$ : Algorithm
    {    
        private $DataStreamClass$ sourceDataStream;
        
        private $CustomParameterType$ _$CustomParameter$;
        [System.ComponentModel.DisplayName("Custom parameter description [-]")]
        public $CustomParameterType$ $CustomParameter$ { get { return  _$CustomParameter$; } }

        public static $AlgorithmName$Factory Factory
        {
            get
            {
                return new $AlgorithmName$Factory();
            }
        }

        public class $AlgorithmName$Factory : AlgorithmFactory
        {
            public String Name { get { return "Evaulate an expression in data streams"; } }
            public String Description { get { return "Evaulate an expression on data lines in stream."; } }

            [System.ComponentModel.DisplayName("Custom parameter description [-]")]
            public $CustomParameterType$ $CustomParameter$ { get; set; }

            public $AlgorithmName$Factory()
            {
                // Initialize parameter here
                $CustomParameter$ = 0;
            }

            public $AlgorithmName$ Create(Project project, IMessanger messanger, $DataStreamClass$ sourceDataStream)
            {
                $AlgorithmName$ algorithm = new $AlgorithmName$(project, messanger, Name, Description);
                algorithm.sourceDataStream = sourceDataStream;
                algorithm._$CustomParameter$ = $CustomParameter$;            
                return algorithm;
            }
        }

        private $AlgorithmName$(Project project, IMessanger messanger, String name, String description) : base(project, messanger, name, description)
        {
            
        }
       
        /// <summary>
        /// Algorithm run
        /// </summary>
        /// <returns>Result object</returns>
        public override AlgorithmResult Run()
        {
            throw new NotImplementedException();
        }       

    }]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>